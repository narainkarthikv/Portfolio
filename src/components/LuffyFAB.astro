---
---

<!-- Luffy FAB (simplified): shows only when data-theme="luffy"; plays audio on click and keeps hover/pulse animations -->
<div id="luffy-fab" class="fixed right-6 bottom-6 z-50 pointer-events-none" role="presentation" aria-hidden="true">
  <button
    id="luffy-fab-btn"
    class="relative flex items-center justify-center h-16 w-16 rounded-full overflow-visible focus:outline-none pointer-events-auto"
    aria-label="Luffy Gear 5"
    type="button"
  >
    <!-- moon aura -->
    <div class="absolute inset-0 rounded-full aura -z-10" aria-hidden></div>

    <!-- subtle cloud swirls -->
    <svg class="absolute -left-8 -top-6 w-28 h-28 opacity-70 cloud-1 pointer-events-none" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10 60 C20 40, 40 30, 60 36 C74 40, 86 50, 92 60 C80 70, 60 76, 44 74 C28 72, 14 68, 10 60 Z" fill="white"/></svg>
    <svg class="absolute -right-10 -bottom-8 w-32 h-32 opacity-60 cloud-2 pointer-events-none" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M88 40 C78 20, 58 10, 40 16 C26 20, 14 30, 8 40 C20 50, 40 56, 56 54 C72 52, 86 48, 88 40 Z" fill="white"/></svg>

    <!-- artwork (public) -->
    <img src="/luffy-nika.png" alt="Luffy Nika" class="h-full w-full object-cover rounded-full mix-blend-multiply filter grayscale contrast-105 brightness-95"/>
  </button>
</div>

<style is:global>
  /* base hidden - only visible when body[data-theme="luffy"] */
  #luffy-fab { opacity: 0; transform: translateY(10px) scale(0.96); transition: opacity 300ms ease, transform 360ms cubic-bezier(.2,.9,.2,1); pointer-events: none; }
  body[data-theme="luffy"] #luffy-fab { opacity: 1; transform: translateY(0) scale(1); pointer-events: auto; }

  /* aura */
  #luffy-fab .aura { background: radial-gradient(circle at 30% 30%, rgba(255,255,255,0.95) 0%, rgba(var(--color),0.85) 35%, rgba(255,150,200,0.06) 70%); box-shadow: 0 8px 30px rgba(var(--color),0.28), 0 2px 10px rgba(255,150,200,0.12) inset; transition: transform 240ms ease, box-shadow 260ms ease; }

  /* cloud motion (subtle) */
  #luffy-fab .cloud-1 { animation: swirlA 6s linear infinite; filter: blur(6px) saturate(1.05) opacity(0.85); }
  #luffy-fab .cloud-2 { animation: swirlB 7s linear infinite; filter: blur(8px) saturate(1.02) opacity(0.75); }
  @keyframes swirlA { 0%{transform:rotate(0)}50%{transform:rotate(6deg) translateX(2px)}100%{transform:rotate(0)} }
  @keyframes swirlB { 0%{transform:rotate(0)}50%{transform:rotate(-8deg) translateY(-3px)}100%{transform:rotate(0)} }

  /* hover / rubber */
  #luffy-fab button { transition: transform 260ms cubic-bezier(.22,.9,.35,1); }
  #luffy-fab button:hover { transform: translateY(-6px) scale(1.04); }
  #luffy-fab button:active { transform: translateY(0) scale(0.98); }
  #luffy-fab button:hover .aura, #luffy-fab button:active .aura { transform: scale(1.06); box-shadow: 0 12px 40px rgba(var(--color),0.36), 0 4px 12px rgba(255,150,200,0.14) inset; }

  /* pulse */
  #luffy-fab .aura.pulse { animation: pulseAura 560ms ease-out; }
  @keyframes pulseAura { 0%{box-shadow:0 8px 30px rgba(var(--color),0.32);transform:scale(1)}40%{box-shadow:0 12px 48px rgba(var(--color),0.5);transform:scale(1.12)}100%{box-shadow:0 8px 30px rgba(var(--color),0.28);transform:scale(1)} }

  /* responsive: smaller on mobile, hide clouds */
  @media (max-width:640px){ #luffy-fab{right:0.875rem;bottom:0.875rem}#luffy-fab button{height:48px;width:48px}#luffy-fab .cloud-1,#luffy-fab .cloud-2{display:none} }

  /* Luffy moon overlay elements (placed in #luffy-moon-root) */
  #luffy-moon-root .luffy-moon { position: absolute; left: 0; top: 0; transform-origin: center; will-change: transform, opacity; filter: drop-shadow(0 18px 40px rgba(255,200,120,0.12)); }
  #luffy-moon-root .luffy-moon .moon-core { width: 160px; height: 160px; border-radius: 50%; background: radial-gradient(circle at 30% 30%, #ffffff 0%, #fff8e6 30%, #ffd6e9 60%); box-shadow: 0 10px 60px rgba(255,200,120,0.12), 0 2px 12px rgba(255,220,240,0.06) inset; mix-blend-mode: screen; }

  #luffy-moon-root .luffy-trail { position: absolute; left:0; top:0; pointer-events:none; filter: blur(18px) saturate(1.1); opacity:0.95; }
  #luffy-moon-root .luffy-trail::before { content: ''; position:absolute; left:0; top:50%; transform:translateY(-50%); width:360px; height:120px; border-radius:999px; background: linear-gradient(90deg, rgba(255,255,255,0.85), rgba(255,220,180,0.6), rgba(255,170,200,0.18)); box-shadow:0 0 60px rgba(255,200,220,0.22); }

  #luffy-moon-root .luffy-lightning { position:absolute; left:0; top:0; width:220px; height:220px; pointer-events:none; opacity:0; mix-blend-mode:screen; }

  /* animation helpers when added as classes */
  .luffy-animate--travel { animation: luffy-moon-fade 400ms ease-out forwards; }

  @keyframes luffy-moon-fade { from { opacity: 0; transform: scale(0.18); } to { opacity: 1; transform: scale(1); } }

  /* reduced motion: keep things minimal */
  @media (prefers-reduced-motion: reduce) {
    #luffy-moon-root .luffy-moon, #luffy-moon-root .luffy-trail, #luffy-moon-root .luffy-lightning { transition: none !important; animation: none !important; opacity: 1 !important; }
  }
</style>

<script is:inline>
  (function () {
    const btn = document.getElementById('luffy-fab-btn');
    const fabWrap = document.getElementById('luffy-fab');
    const moonRoot = document.getElementById('luffy-moon-root');
    if (!btn || !fabWrap) return;

    const audioDrums = new Audio('/drums-of-liberation.mp3');

    function setVisible(yes) {
      const el = document.getElementById('luffy-fab');
      if (!el) return;
      el.setAttribute('aria-hidden', yes ? 'false' : 'true');
    }

    function update() {
      const theme = document.body.getAttribute('data-theme') || '';
      setVisible(theme === 'luffy');
    }

    update();
    new MutationObserver(() => update()).observe(document.body, { attributes: true });

    function createMoonElements() {
      if (!moonRoot) return null;
      // container
      const container = document.createElement('div');
      container.className = 'luffy-moon-wrapper pointer-events-none';

      // main moon
      const moon = document.createElement('div');
      moon.className = 'luffy-moon';
      const core = document.createElement('div');
      core.className = 'moon-core';
      moon.appendChild(core);

      // trail
      const trail = document.createElement('div');
      trail.className = 'luffy-trail';

      // lightning SVG (subtle)
      const lightning = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
      lightning.setAttribute('viewBox', '0 0 200 200');
      lightning.classList.add('luffy-lightning');
      lightning.innerHTML = `
        <defs>
          <linearGradient id="g1" x1="0" x2="1">
            <stop stop-color="#fff6e6" offset="0" />
            <stop stop-color="#ffd6e9" offset="1" />
          </linearGradient>
        </defs>
        <g fill="none" stroke="url(#g1)" stroke-width="6" stroke-linecap="round" stroke-linejoin="round">
          <path d="M140 30 L110 84 L130 84 L90 170" opacity="0.95" stroke-linejoin="round" />
        </g>
      `;

      container.appendChild(trail);
      container.appendChild(moon);
      container.appendChild(lightning);
      moonRoot.appendChild(container);
      return { container, moon, trail, lightning };
    }

    btn.addEventListener('click', async (e) => {
      e.stopPropagation();

      const reduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches;

      // play drums audio (user gesture) - ignore failures
      try { audioDrums.currentTime = 0; await audioDrums.play(); } catch (err) {}

      // small aura pulse
      const aura = document.querySelector('#luffy-fab .aura');
      if (aura) {
        aura.classList.remove('pulse');
        void aura.offsetWidth;
        aura.classList.add('pulse');
      }

      // quick button pop
      btn.animate([
        { transform: 'translateY(0) scale(1)' },
        { transform: 'translateY(-12px) scale(1.08)' },
        { transform: 'translateY(0) scale(1)' }
      ], { duration: 520, easing: 'cubic-bezier(.22,.9,.35,1)' });

      if (reduced || !moonRoot) return;

      const rect = btn.getBoundingClientRect();
      const startX = rect.left + rect.width / 2;
      const startY = rect.top + rect.height / 2;

      const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);
      const vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);

      const el = createMoonElements();
      if (!el) return;
      const { container, moon, trail, lightning } = el;

      // set initial position near FAB
      container.style.left = `${startX - 80}px`;
      container.style.top = `${startY - 80}px`;
      container.style.opacity = '0';
      moon.style.transform = 'scale(0.16)';
      lightning.style.opacity = '0';

      // entrance: fade and pop
      requestAnimationFrame(() => {
        container.style.transition = 'opacity 320ms ease-out';
        container.style.opacity = '1';
        moon.style.transition = 'transform 420ms cubic-bezier(.2,.9,.2,1)';
        moon.style.transform = 'scale(1)';
      });

      // compute end position: travel from right to left behind content in a sweeping arc
      const endX = -Math.max( vw * 0.6, 240 );
      const midY = vh * 0.36 - (Math.random() * vh * 0.08); // slight vertical variation

      // animate container across screen using Web Animations API for a fluid arc
      const travel = container.animate([
        { transform: `translate3d(0px, 0px, 0)`, offset: 0 },
        { transform: `translate3d(${(endX - startX + 80) * 0.45}px, ${midY - startY}px, 0)`, offset: 0.45 },
        { transform: `translate3d(${endX - startX + 80}px, ${midY - startY - 40}px, 0)`, offset: 1 }
      ], { duration: 2200, easing: 'cubic-bezier(.22,.9,.28,1)', fill: 'forwards' });

      // trail animation - stretch and fade
      trail.style.left = `${startX - 180}px`;
      trail.style.top = `${startY - 40}px`;
      trail.animate([
        { transform: 'scaleX(0.12)', opacity: 0.92 },
        { transform: 'scaleX(1.0)', opacity: 0.9, offset: 0.45 },
        { transform: 'scaleX(1.6)', opacity: 0.0 }
      ], { duration: 2000, easing: 'cubic-bezier(.2,.9,.2,1)', fill: 'forwards' });

      // lightning flash timed near mid-travel
      setTimeout(() => {
        lightning.style.left = `${startX - 100}px`;
        lightning.style.top = `${startY - 100}px`;
        lightning.animate([
          { opacity: 0 }, { opacity: 1 }, { opacity: 0 }
        ], { duration: 520, easing: 'ease-out' });
      }, 740);

      // subtle glow pulse on core during travel
      moon.animate([
        { boxShadow: '0 10px 40px rgba(255,200,120,0.12)' },
        { boxShadow: '0 22px 80px rgba(255,180,200,0.22)' },
        { boxShadow: '0 8px 30px rgba(255,200,120,0.12)' }
      ], { duration: 2200, easing: 'ease-in-out' });

      // cleanup after animation completes
      travel.onfinish = () => {
        // fade out the container gracefully
        container.style.transition = 'opacity 480ms ease-out, transform 480ms ease-out';
        container.style.opacity = '0';
        container.style.transform = 'translateY(-12px) scale(0.9)';
        setTimeout(() => {
          if (container && container.parentNode) container.parentNode.removeChild(container);
        }, 520);
      };
    });

    // subtle rubber on pointer enter for non-touch devices
    btn.addEventListener('pointerenter', () => {
      if (window.matchMedia('(hover: hover)').matches) {
        btn.animate([
          { transform: 'translateY(0) scale(1)' },
          { transform: 'translateY(-6px) scale(1.04)' },
          { transform: 'translateY(0) scale(1)' }
        ], { duration: 350, easing: 'cubic-bezier(.22,.9,.45,1)' });
      }
    });
  })();
</script>
