---
import { basics } from '@cv'
import Section from '@/components/Section.astro'
import { Icon } from 'astro-icon/components'

const { name, animated_secondary_initial_label, animated_main_label, animated_secondary_final_label, image, location } = basics
const { city, region, address } = location
---

<Section>
  <div class="min-w-[275px]">
    <section
      id="about"
      aria-label="About me"
      class="group flex gap-2 sm:-rotate-2 flex-col rounded-3xl bg-skin-muted sm:bg-skin-button-muted p-4 transition-all sm:hover:rotate-0 sm:hover:bg-skin-muted"
    >
      <div
        class="flex items-center text-center gap-4"
      >
        <figure class='print:hidden'>
          <img
            data-ccursor="lift"
            class='scale-110 sm:grayscale sm:scale-100 transition-all sm:group-hover:scale-110 sm:group-hover:grayscale-0'
            height={600}
            width={600}
            src={image}
            alt={`Profile of ${name}`}
            loading='eager' />
        </figure>
        <div class="flex flex-col items-center">
          <h1 class="hover:hover-grad-text font-semibold">{name}</h1>
          <div class="overflow-hidden mt-1">
            <div class="font-roboto-condensed font-bold lowercase text-xl lg:text-[1rem] lg:leading-[1rem]">
              <div class="group/subtitle relative flex gap-1 hover:gap-5 active:gap-5 transition-all">
                <div class="transition-all duration-450 ease-in-out group-hover/subtitle:-translate-y-16">
                  <p class="font-roboto-condensed font-medium lowercase text-xl lg:text-[1rem] lg:leading-[1rem]">
                    {animated_secondary_initial_label}
                  </p>
                </div>
                <div class="absolute inset-x-0 top-0 w-max translate-y-16 transition-all duration-450 ease-in-out group-hover/subtitle:translate-y-0">
                  <p class="font-roboto-condensed font-bold lowercase text-xl lg:text-[1rem] lg:leading-[1rem] bg-clip-text text-transparent bg-gradient-to-r from-pink-500 to-violet-500">
                    {animated_secondary_final_label}
                  </p>
                </div>
                <p>{animated_main_label}</p>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div data-ccursor="noPadding" class='flex w-max gap-2 py-1 px-2 text-sm text-skin-muted'>
        <Icon class='print:hidden sm:group-hover:text-skin-hue' name='mdi:world' width={20} height={20} />
        {address}, {city}, {region}
      </div>
    </section>
  </div>
  <div class='flex gap-6 print:hidden'>
        <div
          aria-label="Social media"
          class="flex group/social flex-wrap justify-evenly sm:h-40 sm:w-36 w-full h-min sm:flex-col rounded-3xl p-4 transition-all rotate-0 bg-skin-muted sm:bg-skin-button-muted sm:-rotate-2 sm:hover:rotate-0 sm:hover:bg-skin-muted"
        >
          {
            basics.profiles.map(({network, url, icon, color}) => {
              return (
                <a
                  data-ccursor
                  class="flex flex-col sm:basis-1/2 items-center justify-center rounded-md hover:cursor-none"
                  href={url}
                  target="_blank"
                  rel="noreferrer noopener"
                  aria-label={`${network} (opens in a new tab)`}
                  data-umami-event={`${network} click`}
                  id={network}
                >
                  <Icon name={icon} width={28} height={28} class='sm:grayscale sm:group-hover/social:grayscale-0 transition-all' style=`color: ${color};` aria-label={network}/>
                </a>
              )
            })
          }
        </div>
        <div
          class="footer-button flex h-40 w-36 flex-col place-items-center rounded-3xl sm:bg-skin-muted p-4 transition-all rotate-0 bg-skin-muted sm:rotate-2 sm:hover:rotate-0 sm:hover:bg-skin-button-accent text-skin-hue sm:hover:text-skin-inverted max-sm:hidden print:hidden" data-ccursor="lift"
        >
          <Icon name='ri:command-fill' class='flex-1 w-1/2'/>
          <p class="font-mono font-bold text-center">Open options</p>
        </div>
  </div>

</Section>

<style>
  .info {
    @apply print:gap-0 print:pr-0;
    
    footer {
      @apply flex gap-4;
    }
  }

  h1 {
    @apply text-4xl font-bold print:text-3xl;
  }

  h2 {
    @apply text-balance text-base text-skin-muted print:text-lg;
  }

  img {
    @apply aspect-square w-32 rounded-2xl bg-cover;
  }

  span {
    @apply flex items-center gap-1 text-xs text-skin-hue;
  }

  footer {
    @apply flex gap-1;
  }
  

  @media (width <= 700px) {
    .container {
      flex-direction: column-reverse;
    }

    .info {
      @apply pr-0 md:items-center md:justify-center;
    }

    figure {
      @apply flex md:items-center md:justify-center;
    }

    h2 {
      text-wrap: balance;
    }

    figure {
      @apply md:mx-auto;
    }
  }
</style>

<script>
  const select = document.getElementById('themeSwitch') as HTMLSelectElement
  const theme = localStorage.getItem('theme')
  const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches
    ? 'dark'
    : 'light'

  if (theme !== null) {
    select.value = theme
  } else {
    select.value = systemTheme
  }

  function updateTheme(value: string) {
    const theme = value === 'system' ? systemTheme : value
    document.documentElement.classList.remove('light', 'dark')
    document.documentElement.classList.add(theme)
    localStorage.setItem('theme', value)
  }

  updateTheme(select.value)

  select.addEventListener('change', (event: Event) => {
    const select = event.target as HTMLSelectElement
    updateTheme(select.value)
  })

  // Desable dark mode before printing
  window.addEventListener('beforeprint', () => {
    document.documentElement.classList.remove('dark')
  })

  // Restore dark mode after printing
  window.addEventListener('afterprint', () => {
    if (
      select.value === 'dark' ||
      (select.value === 'system' && systemTheme === 'dark')
    ) {
      document.documentElement.classList.add('dark')
    }
  })
</script>
